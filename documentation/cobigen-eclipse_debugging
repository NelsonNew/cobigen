= Debugging Cobigen-Eclipse

To debug Cobigen-Eclipse, follow the steps below:

Install Cobigen-Plugins via "Install New Software" -> "Add" -> "cobigen-plugins" -> "target/repository" and add it.
Open the target file "Eclipse.test.targets.2018-12.target" and add the target/repository of each plugin by clicking "Add".
Click "Target Reload" at the top of the target.
To run Eclipse in the runtime, right-click on "cobigen.eclipse" and select "Debug As" -> "Eclipse Application".
Use Eclipse 2018-12 as it is also used in "mvn". Running Platform will use your installed Eclipse version.
Plugins will not be displayed in the installed software of Eclipse.
Open the OSGi Console (arrow at the top right in console) and type "ss" to show all loaded plugins.
In the new Eclipse, execute Cobigen commands and set breakpoints and debug in the original Eclipse.
For example, in "CobiGenPaths.class", attach source and select the project folder "cobigen".
Class files cannot be modified, so you need to find the equivalent class.
Breakpoints are better placed in the equivalent Java files rather than in the class files.
You can select the Eclipse version in preferences "Target Version".
Click "Terminate" in the top left to close the environment.

== Debugging (SWTBot-)Tests

To debug tests in Cobigen-Eclipse, follow these steps:

Right-click on the test you want to debug and select "Debug As" and then "Debug Configurations".
In the "Debug Configurations" window, click on "New Configuration" to create a new test configuration.
Make sure that "Run in UI thread" is not selected.
Click "Apply" to save the new configuration.
Click "Debug" to start the test in debug mode.
SWTBot will perform the test and you can use classic debugging to debug any issues that may arise.
If the test is aborted and the cleanup function doesn't work, it is recommended to delete the "junit-workspace" folder in the workspace, as this folder may contain information about what happened during the test.

You can also use the "Debug Configurations" window to add the current debug session to your favorites menu. This allows you to easily access the debug session history later by selecting "Debug" and then the name of the debug session from the favorites menu.
